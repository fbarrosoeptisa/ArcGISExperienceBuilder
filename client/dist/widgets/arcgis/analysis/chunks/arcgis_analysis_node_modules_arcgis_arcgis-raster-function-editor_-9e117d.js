"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-9e117d"],{83742:(e,t,i)=>{i.r(t),i.d(t,{rfx_cte_clipping_geometry:()=>y});var r=i(6225),s=i(93210),n=(i(5294),i(13661),i(18423),i(21255),i(35431),i(22493)),a=i(74229),p=i(91177),l=i(42776);i(23795),i(17902),i(56451),i(588),i(71802),i(44345),i(32513),i(33752),i(36596);const g="clippingGeometryOrRasterHelpClickHandler",o="useinputFeaturesHelpClickHandler",h="outputExtentHelpClickHandler",c="clippingRaster",u="clippingGeometry",d="currentExtent",y=class{constructor(e){(0,r.r)(this,e),this.rfxArgumentChange=(0,r.c)(this,"rfxArgumentChange",7),this.rasterOrGeometryValueMapper={geometryValue:void 0,rasterValue:void 0},this.extentMapper={mapExtent:void 0,inputRasterExtent:void 0,clippingRasterGeometryExtent:void 0,clippingFeatureGeometryExtent:void 0,useInputFeatureGeometryExtent:void 0},this.helpActionClickEventHandlers=new Map,this.inituseInputFeatureGeometry=e=>{this.useInputFeatureGeometryRfxArg=e;const{triggerArgs:t}=this.widgetArgs;t.UseInputFeatureGeometry.input=this.useInputFeatureGeometryRfxArg,this.useInputFeatureGeometryRfxArg?.addEventListener("calciteCheckboxChange",(e=>{const t=e.target.checked;this.useInputFeatureGeometryRfxArgValue=t,this.widgetArgs.triggerArgs.UseInputFeatureGeometry.value=t,this.widgetArgs.inputArgs.ClippingGeometry.value=this.useInputFeatureGeometryRfxArgValue?this.extentMapper.useInputFeatureGeometryExtent:this.extentMapper.clippingFeatureGeometryExtent}))},this.initExtent=e=>{this.extentWidget=e;const{inputArgs:t}=this.widgetArgs;t.Extent.input=this.extentWidget},this.handleClippingGeometryTypesChange=e=>{e.stopPropagation();const t=e.target;switch(this.clippingGeometryTypeSelected=t.value,this.clippingGeometryTypeSelected){case d:this.extentMapper.mapExtent=(0,a.l)(this.map?.extent),this.widgetArgs.inputArgs.ClippingRaster.value=void 0,this.widgetArgs.inputArgs.ClippingGeometry.value=void 0;break;case c:this.widgetArgs.inputArgs.ClippingGeometry.value=void 0;break;case u:this.widgetArgs.inputArgs.ClippingRaster.value=void 0}},this.setMapExtent=()=>{(0,n.p)(this.map)||(this.extentMapper.mapExtent=(0,a.l)(this.map?.extent),this.renderFlag=!this.renderFlag)},this.renderUpdateActiveMapExtentButton=()=>(0,r.h)("calcite-button",{alignment:"center",appearance:"outline",kind:"neutral",scale:l.U.Scale,type:"button",width:"full",onClick:this.setMapExtent},this.strings.currentMapExtent),this.handleClippingGeometryRasterChange=async({detail:{value:e}})=>{this.rasterOrGeometryValueMapper.rasterValue=e;const t=await(this.clippingGeometryRasterArg?.getSelectedLayer?.()),i=(0,a.k)(t);this.widgetArgs.inputArgs.ClippingRaster.value=(0,a.e)(t),this.extentMapper.clippingRasterGeometryExtent=i,this.renderFlag=!this.renderFlag},this.handleClippingGeometryFeatureChange=async({detail:{value:e}})=>{this.rasterOrGeometryValueMapper.geometryValue=e;const t=await(this.clippingGeometryFeatureArg?.getSelectedLayer?.()),i=(0,a.k)(t);this.extentMapper.clippingFeatureGeometryExtent=i;const r=await(0,a.m)(t);let s={};s="polygon"===t.geometryType?{rings:r?.map((e=>e?.toJSON().rings)).flat(1),spatialReference:r?.[0]?.toJSON().spatialReference}:"point"===t.geometryType?{geometries:r?.map((e=>{const t=e.toJSON();return{x:t.x,y:t.y}})),spatialReference:r?.[0]?.toJSON().spatialReference}:i,this.extentMapper.useInputFeatureGeometryExtent=s,this.widgetArgs.inputArgs.ClippingGeometry.value=this.useInputFeatureGeometryRfxArgValue?s:i,this.renderFlag=!this.renderFlag},this.widgetArgs=void 0,this.clippingGeometryTypeSelected=void 0,this.clippingTypeRfxArgValue=void 0,this.useInputFeatureGeometryRfxArgValue=!1,this.extentvalue=void 0,this.renderFlag=!1}onWidgetArgsChange(e){this.processWidgetArgs(e)}connectedCallback(){this.processWidgetArgs(this.widgetArgs)}async componentWillLoad(){({strings:this.strings,dir:this.direction}=await(0,s.c)(this.hostElement,(0,r.a)("."))),await this.setInitialState(this.widgetArgs)}componentWillRender(){const e={1:()=>{switch(this.clippingGeometryTypeSelected){case d:return this.extentMapper.mapExtent;case c:return this.extentMapper.clippingRasterGeometryExtent;case u:return this.extentMapper.clippingFeatureGeometryExtent}},2:()=>this.extentMapper.inputRasterExtent}[this.clippingTypeRfxArgValue].bind(this)();this.extentvalue=e}componentDidLoad(){this.attachHelpClickEventHandlers()}processWidgetArgs({browseProperties:e,triggerArgs:t}){this.map=e.map,((0,n.p)(t)||(0,n.p)(t.Raster)||(0,n.p)(t.ClippingType)||(0,n.p)(t.UseInputFeatureGeometry))&&console.error("Invalid Schema: TriggerArgs is incorrect!");const i=t.Raster;this.rasterArg=i,i.input?.addEventListener("rfxArgumentChange",this.handleRasterChange.bind(this));const r=t.ClippingType;this.clippingTypeRfxArg=r,r.input?.addEventListener("rfxArgumentChange",(({detail:{value:e}})=>{this.clippingTypeRfxArgValue=e}))}attachHelpClickEventHandlers(){const e=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.inputArgs.ClippingGeometry.displayName,referenceElement:this.clippingGeometryOrRasterContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_clippinggeometryorraster}),t=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.inputArgs.Extent.displayName,referenceElement:this.extentContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_outputextent});this.helpActionClickEventHandlers.set(g,e),this.helpActionClickEventHandlers.set(h,t)}async setInitialState({inputArgs:e,triggerArgs:t}){const i=t.Raster,r=i?.input,s=await(r?.getSelectedLayer?.());this.extentMapper.inputRasterExtent=(0,a.k)(s);const l=t.ClippingType;this.clippingTypeRfxArgValue=l.value;const g=t.UseInputFeatureGeometry;this.useInputFeatureGeometryRfxArgValue=!!g.value;const o=e.Extent;this.extentvalue=o.value,this.extentMapper.mapExtent=(0,a.l)(this.map?.extent);const h=!(0,n.p)(e.ClippingRaster?.value||(0,p.o)(e.ClippingRaster)),y=!(0,n.p)(e.ClippingGeometry?.value||(0,p.o)(e.ClippingGeometry)),m=!h&&!y,x=1===this.clippingTypeRfxArgValue;h&&x&&(this.extentMapper.clippingRasterGeometryExtent=this.extentvalue),y&&x&&(this.extentMapper.clippingFeatureGeometryExtent=this.extentvalue),this.clippingGeometryTypeSelected=m?d:h?c:u}async handleRasterChange(){const e=this.rasterArg?.input,t=await(e?.getSelectedLayer?.()),i=(0,a.k)(t);this.extentMapper.inputRasterExtent=i}renderClippingGeometryTypes(){const e=[{key:d,label:this.strings.activeMapViewExtent},{key:c,label:this.strings.chooseRaster},{key:u,label:this.strings.chooseGeometry}];return(0,r.h)("rfx-dtex-common-select",{mode:this.widgetArgs.mode,options:e,value:this.clippingGeometryTypeSelected,onRfxArgumentChange:this.handleClippingGeometryTypesChange})}renderClippingGeometryRaster(){const{inputLayers:e}=this.widgetArgs;return(0,r.h)("rfx-dte-raster-input",{mode:this.widgetArgs.mode,ref:e=>this.clippingGeometryRasterArg=e,inputLayers:e,value:this.rasterOrGeometryValueMapper.rasterValue,onRfxArgumentChange:this.handleClippingGeometryRasterChange,rfxBrowseLayerClick:this.widgetArgs.onRfxBrowseLayerClick,rfxVariable:this.widgetArgs.inputArgs.ClippingRaster,portal:this.widgetArgs.portal})}renderClippingGeometryFeature(){const{featureLayers:e}=this.widgetArgs;return(0,r.h)("rfx-dte-feature-select",{mode:this.widgetArgs.mode,ref:e=>this.clippingGeometryFeatureArg=e,inputLayers:e,value:this.rasterOrGeometryValueMapper.geometryValue,onRfxArgumentChange:this.handleClippingGeometryFeatureChange,rfxBrowseLayerClick:this.widgetArgs.onRfxBrowseLayerClick})}render(){return(0,r.h)("div",{key:"d60d5b5d7082bdc56c7ec8a548c807f1d377405c"},(0,r.h)("calcite-label",{key:"b3c1fdb586ef0fa6deb4ae555a3b1ef227a007b5",alignment:"start",scale:l.U.Scale,layout:"default",ref:e=>{this.clippingGeometryOrRasterContainer=e}},(0,r.h)("rfx-label",{key:"685f86178c73d7da54a4241c8988e098dd57c700",label:this.widgetArgs.inputArgs.ClippingGeometry.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(g)()}),this.renderClippingGeometryTypes(),this.clippingGeometryTypeSelected===d?this.renderUpdateActiveMapExtentButton():null,this.clippingGeometryTypeSelected===c?this.renderClippingGeometryRaster():null,this.clippingGeometryTypeSelected===u?this.renderClippingGeometryFeature():null),this.clippingGeometryTypeSelected===u?(0,r.h)("calcite-label",{alignment:"start",scale:l.U.Scale,layout:"inline-space-between",ref:e=>{this.useInputFeatureGeometryContainer=e;const t=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.triggerArgs.UseInputFeatureGeometry.displayName,referenceElement:this.useInputFeatureGeometryContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_useinputfeaturesforclippinggeometry});this.helpActionClickEventHandlers.set(o,t)}},(0,r.h)("calcite-checkbox",{checked:this.useInputFeatureGeometryRfxArgValue,ref:this.inituseInputFeatureGeometry}),(0,r.h)("rfx-label",{label:this.widgetArgs.triggerArgs.UseInputFeatureGeometry.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(o)()})):null,(0,r.h)("calcite-label",{key:"3d06229a90c25bee9d5bf7fc18c3e23ffa55b59e",alignment:"start",scale:l.U.Scale,layout:"default",ref:e=>{this.extentContainer=e}},(0,r.h)("rfx-label",{key:"513a9129e1b48e02060bedc16058551fab6d5609",label:this.widgetArgs.inputArgs.Extent.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(h)()}),(0,r.h)("rfx-dte-extent",{key:"613abccb60045b4367443944bb0177fc46b43177",ref:this.initExtent,value:this.extentvalue})))}static get assetsDirs(){return["t9n"]}get hostElement(){return(0,r.d)(this)}static get watchers(){return{widgetArgs:["onWidgetArgsChange"]}}};i(55448),i(2924),i(11840),i(52373),i(440),i(66744),i(76529),i(17078)},42776:(e,t,i)=>{i.d(t,{C:()=>s,U:()=>r,a:()=>n,u:()=>a});const r={Scale:"s",PopoverTimer:60},s={s:"s",m:"m",l:"l"},n={absolute:"absolute",fixed:"fixed"},a=e=>e===s.s?s.m:s.l}}]);