/*! For license information please see arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-b95cc9.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-b95cc9"],{72119:(e,t,a)=>{a.r(t),a.d(t,{arcgis_time_zone:()=>s});var o=a(28614),n=a(68180),i=a(97127),r=a(50063);a(71480);const s=class{constructor(e){(0,o.r)(this,e),this.manager=(0,i.u)(this),this.strings=(0,r.u)({blocking:!0}),this.mapView=void 0,this.config=void 0}async closePopover(){this.removePopover()}async componentWillLoad(){const{mapView:e}=this;(0,n.i)(e.timeZone)||(e.timeZone="system")}async componentDidLoad(){this.containerPanelNode=(0,n.q)(this.el,"calcite-panel"),this.containerPanelNode||(this.containerPanelNode=(0,n.q)(this.el,"calcite-flow-item")),this.parentBlockNode=(0,n.q)(this.el,"calcite-block"),this.parentBlockNode?.addEventListener("calciteBlockToggle",(()=>{this.removePopover()}))}disconnectedCallback(){this.removePopover()}render(){const{strings:e,mapView:t}=this;return(0,o.h)(o.H,{key:"fffa685f946424fa1eb66bd806679a4f03c82a76"},(0,o.h)("div",{key:"b7144315ca05e20d9f383f0cf94657ccf602b2cd",class:"wrapper-node",ref:e=>this.wrapperNode=e},(0,o.h)("calcite-label",{key:"250f80da1aca0c7c11bcfd6f898093e5d7759552",layout:"inline"},(0,o.h)("section",{key:"9e924a17cafaa249aba421ce1ff157940d668af5",class:"time-zone-toggle"},e.timeZoneLabel,(0,o.h)("calcite-button",{key:"780403bd44c741101fc95d973c135ee160372bb3",class:"info-button","icon-start":"information",scale:"s",appearance:"transparent",kind:"neutral",onClick:e=>{e.stopPropagation(),this.popoverNode?.parentElement?this.removePopover():this.openPopover()},ref:e=>this.infoButtonNode=e}))),(0,o.h)("calcite-radio-button-group",{key:"a5179731f900d6d93cc29dbe8c8505ce713b8a13",ref:e=>this.radioButtonGroupNode=e,name:"time-zone-options",onCalciteRadioButtonGroupChange:e=>{const t=e.target;this.handleTimeZoneOptionChange(t.selectedItem.value)}},(0,o.h)("div",{key:"34078a8240fda6b38684ed4ce8ccdf7af1dc80bb",class:"radio-button-group-wrapper"},(0,o.h)("calcite-label",{key:"bdbeae9a10843893e8dbad905bf4ca97effb4bdb",layout:"inline"},(0,o.h)("calcite-radio-button",{key:"ed46950d57144b241392d040174e0e213ca1db8f",checked:"system"===t.timeZone,value:"system"}),e.deviceLabel),(0,o.h)("calcite-label",{key:"121793a9d76e470bbd1721c88e65d7223df98be8",layout:"inline"},(0,o.h)("calcite-radio-button",{key:"45da6dce0ac4d8e1d2ec138f3e958d5611e198e6",checked:"system"!==t.timeZone&&"unknown"!==t.timeZone,value:"time-zone"}),e.specificLabel),(0,o.h)("calcite-input-time-zone",{key:"444215bf7c04800184588cd152c3b333848f3662",class:(["system","unknown"].includes(t.timeZone)?"hidden":"")+" block-content-padding",mode:"region",ref:e=>this.ianaTimeZoneNode=e,onCalciteInputTimeZoneChange:()=>t.timeZone=this.ianaTimeZoneNode.value,value:t.timeZone}),(0,o.h)("calcite-label",{key:"f382ea3f19475886f64ea9778b0e6ac76d2eb1c6",layout:"inline"},(0,o.h)("calcite-radio-button",{key:"8b705ba587de2c4f64c5c82d0c458c27f7c78c1b",checked:"unknown"===t.timeZone,value:"unknown"}),e.dataLabel)))))}handleTimeZoneOptionChange(e){const{mapView:t}=this,a=this.ianaTimeZoneNode.value;t.timeZone="time-zone"!==e?e:a;const o="time-zone"===this.radioButtonGroupNode.selectedItem.value?"remove":"add";this.ianaTimeZoneNode.classList[o]("hidden")}openPopover(){const{config:e,strings:t}=this;this.popoverNode=document.createElement("arcgis-time-zone-popover");const a=this.popoverNode;a.popoverProps={refElement:this.containerPanelNode??this.parentBlockNode??this.wrapperNode,offsetSkidding:this.containerPanelNode?100:0},a.strings=t,a.config=e,a.addEventListener("arcgisPopoverClose",(()=>{this.closePopover(),this.infoButtonNode.setFocus()})),document.body.appendChild(a)}removePopover(){this.popoverNode?.parentElement?.removeChild(this.popoverNode),this.popoverNode=void 0}static get assetsDirs(){return["assets"]}get el(){return(0,o.g)(this)}};s.style=":host{height:100%}.wrapper-node{background-color:var(--calcite-color-foreground-1)}.time-zone-toggle{font-family:var(--calcite-sans-family);font-weight:var(--calcite-font-weight-medium)}.info-button{margin:auto 0.25rem}.radio-button-group-wrapper{display:flex;flex-direction:column;width:100%}.block-content-padding{padding-bottom:10px}.hidden{display:none}"},68180:(e,t,a)=>{a.d(t,{a:()=>o,b:()=>h,c:()=>k,d:()=>p,e:()=>u,f:()=>r,g:()=>d,h:()=>N,i:()=>c,j:()=>l,k:()=>f,l:()=>n,m:()=>m,n:()=>g,o:()=>b,p:()=>x,q:()=>v,s:()=>i,t:()=>y});var o,n,i,r,s=a(71480);function c(e){return null!=e}function l(e,t){const a=e.fieldName;if(a.includes(o.expression)){const e=t.get(a);return e?.title?e.title:a}return e.label?e.label:a}async function d(e){return new Map((await async function(e){return await new Promise(((t,a)=>{switch(p(e)){case i.feature:case i.ogcFeature:case i.stream:t(e.fields);break;case i.mapImage:{const o=e,n=o?.layer;n?.portalItem&&n.url.includes("https://demographics")&&n.url.includes(".arcgis.com")?n.portalItem?.fetchData().then((e=>{if(e?.thematicGroup){const a=new Map(o.fields.map((e=>[e.name,e]))),n=e.thematicGroup.fieldNames,i=[];n.forEach((e=>{a.has(e)&&i.push(a.get(e))})),t(i)}else t(o.fields)})).catch((e=>{a(new Error(e))})):t(o.fields);break}case i.imagery:{const a=e;t((a.fields||[]).concat(a.rasterFields||[]));break}case i.imageryTile:case i.wcs:t(e.rasterFields);break;default:t("fields"in e?e.fields??[]:[])}}))}(e)).filter((e=>e.visible)).map((e=>[e.name,e])))}function u(e){const t=new Map;return e?.expressionInfos&&e.expressionInfos.forEach((e=>{const a=`${o.expression}${e.name}`;t.set(a,e)})),t}function p(e){return"map-image"===e?.layer?.type?i.mapImage:"subtype-sublayer"===e?.type?i.subtype:"tile"===e?.layer?.type?i.tile:"scene"===e?.type?i.scene:"ogc-feature"===e?.type?i.ogcFeature:"imagery"===e?.type?i.imagery:"imagery-tile"===e?.type?i.imageryTile:"wfs"===e?.type?i.wfs:"wcs"===e?.type?i.wcs:"wms"===e?.layer?.type?i.wms:"csv"===e?.type?i.csv:"geojson"===e?.type?i.geojson:"stream"===e?.type?i.stream:"oriented-imagery"===e?.type?i.orientedImagery:"catalog"===e?.type?i.catalog:"catalog-footprint"===e?.type?i.catalogFootprint:"knowledge-graph-sublayer"===e?.type?i.knowledgeGraphSublayer:"voxel"===e?.type?i.voxel:i.feature}function m(e){if(e)switch(e.type){case"point":return e;case"extent":return e.center;case"polygon":return e.centroid;case"multipoint":case"polyline":return e.extent?.center;default:return}}function f(e){return Number((100*(1-e)).toFixed(1))}function y(e){return Number((1-e/100).toFixed(3))}!function(e){e.expression="expression/",e.raster="Raster.",e.relationship="relationships/"}(o||(o={})),function(e){e.cluster="cluster",e.feature="feature",e.mapNotes="mapNotes"}(n||(n={})),function(e){e.catalog="catalog",e.catalogFootprint="catalog-footprint",e.csv="csv",e.feature="feature",e.geojson="geojson",e.imagery="imagery",e.imageryTile="imagery-tile",e.knowledgeGraphSublayer="knowledge-graph-sublayer",e.mapImage="map-image",e.ogcFeature="ogc-feature",e.orientedImagery="oriented-imagery",e.scene="scene",e.stream="stream",e.subtype="subtype",e.tile="tile",e.voxel="voxel",e.wcs="wcs",e.wfs="wfs",e.wms="wms"}(i||(i={})),function(e){e.bigInteger="big-integer",e.date="date",e.dateOnly="date-only",e.double="double",e.globalId="global-id",e.guid="guid",e.integer="integer",e.long="long",e.number="number",e.oid="oid",e.single="single",e.smallInteger="small-integer",e.string="string",e.timeOnly="time-only",e.timestampOffset="timestamp-offset"}(r||(r={}));const g=(e,t)=>{const a=[];return e?.fieldInfos?.forEach((e=>{e.fieldName?.includes(o.expression)?t&&a.push({name:e.fieldName.slice(o.expression.length),alias:e.fieldName.slice(o.expression.length),type:"string"}):a.push({name:e.fieldName,alias:e.label,type:"string"})})),a},h=async(e,t)=>{const[a,o]=await Promise.all([(0,s.g)(),(0,s.h)()]),n=new o;n.geometry=t.extent,n.mapExtent=t.extent,n.returnGeometry=!0,n.tolerance=6,n.layerOption="popup",n.width=t.width,n.height=t.height,n.layerIds=[e.id];const i=(await a.identify(e.layer.url,n))?.results,r=i?.[0]?.feature;return r},b=async(e,t,a)=>{const o=await e.whenLayerView(t),n=await o.queryAggregates();return await w(a,n.features?.[0])},w=async(e,t)=>{const a=await(0,s.j)(),o=await(0,s.k)();let n;if(t)n=t.clone();else{n=new a;const t=g(e,!1);if(t?.length){const e={};t.forEach((t=>{e[t.name]=""})),n.attributes=e}const i=new o;n.geometry=i}return n};function v(e,t){const a=t.startsWith("#"),o=t.startsWith(".");for((o||a)&&(t=t.slice(1));e;){if(a){if(e.id===t)return e}else if(o){if(e.classList.contains(t))return e}else if(e.tagName.toLowerCase()===t.toLowerCase())return e;e=e.parentElement??e.getRootNode()?.host??void 0}}async function k(e){if(p(e)===i.stream)return await Promise.resolve("point");if(e.geometryType)return await Promise.resolve(e.geometryType);if(p(e)===i.mapImage&&e?.layer?.sourceJSON?.layers){const t=e.layer?.sourceJSON.layers.find((t=>{if(t.id===e.id)return t}))?.geometryType?.toLowerCase();if(t)return t.indexOf("point")>-1?await Promise.resolve("point"):t.indexOf("line")>-1?await Promise.resolve("polyline"):t.indexOf("polygon")>-1?await Promise.resolve("polygon"):await Promise.resolve(t);{const t=e?.layer?.findSublayerById(e.id);if(t){const e=await(t?.createFeatureLayer());return e?(await e.load(),await Promise.resolve(e?.geometryType)):void await Promise.resolve()}return void await Promise.resolve()}}await Promise.resolve()}function N(e,t,a){let o="";if(/^raster.(?:item|service)pixelvalue/iu.test(e))o="number";else if(t.has(e)){const a=t.get(e);o=a.type?a.type.toLowerCase():""}else if(a.has(e)){const t=a.get(e);o=t.returnType?t.returnType.toLowerCase():""}else o="number";return o}async function x(e,t){return"feature"!==e.type||e.url?"feature"===e.type||"csv"===e.type||"scene"===e.type||"wfs"===e.type||"geojson"===e.type||"oriented-imagery"===e.type||"subtype-group"===e.type||"subtype-sublayer"===e.type||"catalog"===e.type||"catalog-footprint"===e.type?await e.queryFeatureCount():!t||"stream"!==e.type&&"ogc-feature"!==e.type?await Promise.reject(new Error(`Can't get feature count for layer of type ${e.type}.`)):await async function(e,t){const a=await t.whenLayerView(e);return await a.queryFeatureCount()}(e,t):await async function(e){const t=e.createQuery();t.outFields=["*"];const a=await e.queryFeatures(t);if(a.features?.length)return a.features.length;throw new Error("could not get feature count")}(e)}},50063:(e,t,a)=>{a.d(t,{u:()=>i});var o=a(97127),n=a(28614);const i=(0,o.m)(n.a)}}]);