/*! For license information please see arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-873902.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-873902"],{68180:(e,t,r)=>{r.d(t,{a:()=>i,b:()=>g,c:()=>b,d:()=>f,e:()=>m,f:()=>s,g:()=>c,h:()=>I,i:()=>l,j:()=>u,k:()=>p,l:()=>a,m:()=>d,n:()=>y,o:()=>v,p:()=>x,q:()=>h,s:()=>n,t:()=>w});var i,a,n,s,o=r(71480);function l(e){return null!=e}function u(e,t){const r=e.fieldName;if(r.includes(i.expression)){const e=t.get(r);return e?.title?e.title:r}return e.label?e.label:r}async function c(e){return new Map((await async function(e){return await new Promise(((t,r)=>{switch(f(e)){case n.feature:case n.ogcFeature:case n.stream:t(e.fields);break;case n.mapImage:{const i=e,a=i?.layer;a?.portalItem&&a.url.includes("https://demographics")&&a.url.includes(".arcgis.com")?a.portalItem?.fetchData().then((e=>{if(e?.thematicGroup){const r=new Map(i.fields.map((e=>[e.name,e]))),a=e.thematicGroup.fieldNames,n=[];a.forEach((e=>{r.has(e)&&n.push(r.get(e))})),t(n)}else t(i.fields)})).catch((e=>{r(new Error(e))})):t(i.fields);break}case n.imagery:{const r=e;t((r.fields||[]).concat(r.rasterFields||[]));break}case n.imageryTile:case n.wcs:t(e.rasterFields);break;default:t("fields"in e?e.fields??[]:[])}}))}(e)).filter((e=>e.visible)).map((e=>[e.name,e])))}function m(e){const t=new Map;return e?.expressionInfos&&e.expressionInfos.forEach((e=>{const r=`${i.expression}${e.name}`;t.set(r,e)})),t}function f(e){return"map-image"===e?.layer?.type?n.mapImage:"subtype-sublayer"===e?.type?n.subtype:"tile"===e?.layer?.type?n.tile:"scene"===e?.type?n.scene:"ogc-feature"===e?.type?n.ogcFeature:"imagery"===e?.type?n.imagery:"imagery-tile"===e?.type?n.imageryTile:"wfs"===e?.type?n.wfs:"wcs"===e?.type?n.wcs:"wms"===e?.layer?.type?n.wms:"csv"===e?.type?n.csv:"geojson"===e?.type?n.geojson:"stream"===e?.type?n.stream:"oriented-imagery"===e?.type?n.orientedImagery:"catalog"===e?.type?n.catalog:"catalog-footprint"===e?.type?n.catalogFootprint:"knowledge-graph-sublayer"===e?.type?n.knowledgeGraphSublayer:"voxel"===e?.type?n.voxel:n.feature}function d(e){if(e)switch(e.type){case"point":return e;case"extent":return e.center;case"polygon":return e.centroid;case"multipoint":case"polyline":return e.extent?.center;default:return}}function p(e){return Number((100*(1-e)).toFixed(1))}function w(e){return Number((1-e/100).toFixed(3))}!function(e){e.expression="expression/",e.raster="Raster.",e.relationship="relationships/"}(i||(i={})),function(e){e.cluster="cluster",e.feature="feature",e.mapNotes="mapNotes"}(a||(a={})),function(e){e.catalog="catalog",e.catalogFootprint="catalog-footprint",e.csv="csv",e.feature="feature",e.geojson="geojson",e.imagery="imagery",e.imageryTile="imagery-tile",e.knowledgeGraphSublayer="knowledge-graph-sublayer",e.mapImage="map-image",e.ogcFeature="ogc-feature",e.orientedImagery="oriented-imagery",e.scene="scene",e.stream="stream",e.subtype="subtype",e.tile="tile",e.voxel="voxel",e.wcs="wcs",e.wfs="wfs",e.wms="wms"}(n||(n={})),function(e){e.bigInteger="big-integer",e.date="date",e.dateOnly="date-only",e.double="double",e.globalId="global-id",e.guid="guid",e.integer="integer",e.long="long",e.number="number",e.oid="oid",e.single="single",e.smallInteger="small-integer",e.string="string",e.timeOnly="time-only",e.timestampOffset="timestamp-offset"}(s||(s={}));const y=(e,t)=>{const r=[];return e?.fieldInfos?.forEach((e=>{e.fieldName?.includes(i.expression)?t&&r.push({name:e.fieldName.slice(i.expression.length),alias:e.fieldName.slice(i.expression.length),type:"string"}):r.push({name:e.fieldName,alias:e.label,type:"string"})})),r},g=async(e,t)=>{const[r,i]=await Promise.all([(0,o.g)(),(0,o.h)()]),a=new i;a.geometry=t.extent,a.mapExtent=t.extent,a.returnGeometry=!0,a.tolerance=6,a.layerOption="popup",a.width=t.width,a.height=t.height,a.layerIds=[e.id];const n=(await r.identify(e.layer.url,a))?.results,s=n?.[0]?.feature;return s},v=async(e,t,r)=>{const i=await e.whenLayerView(t),a=await i.queryAggregates();return await P(r,a.features?.[0])},P=async(e,t)=>{const r=await(0,o.j)(),i=await(0,o.k)();let a;if(t)a=t.clone();else{a=new r;const t=y(e,!1);if(t?.length){const e={};t.forEach((t=>{e[t.name]=""})),a.attributes=e}const n=new i;a.geometry=n}return a};function h(e,t){const r=t.startsWith("#"),i=t.startsWith(".");for((i||r)&&(t=t.slice(1));e;){if(r){if(e.id===t)return e}else if(i){if(e.classList.contains(t))return e}else if(e.tagName.toLowerCase()===t.toLowerCase())return e;e=e.parentElement??e.getRootNode()?.host??void 0}}async function b(e){if(f(e)===n.stream)return await Promise.resolve("point");if(e.geometryType)return await Promise.resolve(e.geometryType);if(f(e)===n.mapImage&&e?.layer?.sourceJSON?.layers){const t=e.layer?.sourceJSON.layers.find((t=>{if(t.id===e.id)return t}))?.geometryType?.toLowerCase();if(t)return t.indexOf("point")>-1?await Promise.resolve("point"):t.indexOf("line")>-1?await Promise.resolve("polyline"):t.indexOf("polygon")>-1?await Promise.resolve("polygon"):await Promise.resolve(t);{const t=e?.layer?.findSublayerById(e.id);if(t){const e=await(t?.createFeatureLayer());return e?(await e.load(),await Promise.resolve(e?.geometryType)):void await Promise.resolve()}return void await Promise.resolve()}}await Promise.resolve()}function I(e,t,r){let i="";if(/^raster.(?:item|service)pixelvalue/iu.test(e))i="number";else if(t.has(e)){const r=t.get(e);i=r.type?r.type.toLowerCase():""}else if(r.has(e)){const t=r.get(e);i=t.returnType?t.returnType.toLowerCase():""}else i="number";return i}async function x(e,t){return"feature"!==e.type||e.url?"feature"===e.type||"csv"===e.type||"scene"===e.type||"wfs"===e.type||"geojson"===e.type||"oriented-imagery"===e.type||"subtype-group"===e.type||"subtype-sublayer"===e.type||"catalog"===e.type||"catalog-footprint"===e.type?await e.queryFeatureCount():!t||"stream"!==e.type&&"ogc-feature"!==e.type?await Promise.reject(new Error(`Can't get feature count for layer of type ${e.type}.`)):await async function(e,t){const r=await t.whenLayerView(e);return await r.queryFeatureCount()}(e,t):await async function(e){const t=e.createQuery();t.outFields=["*"];const r=await e.queryFeatures(t);if(r.features?.length)return r.features.length;throw new Error("could not get feature count")}(e)}},18080:(e,t,r)=>{r.d(t,{a:()=>g,c:()=>y});var i=r(71480),a=r(90028),n=r(68180);function s(e,t){return o(e,t)||function(e,t){const r=e.owner,i="admin"===e.itemControl,a=["esri_livingatlas","esri_demographics","esri_boundaries"];if(e.portal?.isPortal&&!o(e,t)&&i&&r?.includes("esri_")&&!a.includes(r))return!1;return i}(e,t)}function o(e,t){return e.owner===t.username}function l(e){return e.typeKeywords?.includes("View Service")}function u(e){return e.typeKeywords?.includes("Hosted Service")}function c(e){return e.typeKeywords?.includes("Multi Services View")}function m(e){return e?.hasViews&&!e.sourceSchemaChangesAllowed}async function f(e){const t=e?.portalItem;if(!t)return await Promise.resolve(null);const r=t.portal,n=await(0,i.f)();if(r?.user){const e=`${(0,a.g)(r)}community/users/${r.user.username}`;return await n(e,{query:{f:"json",token:t.portal.credential?.token},responseType:"json"}).then((e=>{const t=e.data?.groups??[];return Promise.resolve(t)}),(()=>Promise.reject(new Error("Failed to fetch user groups"))))}return await Promise.resolve(null)}async function d(e){const t=e?.portalItem;if(!t)return await Promise.resolve(null);const r=t.portal,n=await(0,i.f)(),s=`${(0,a.g)(r)}content/items/${t.id}/groups`;return await n(s,{query:{f:"json",token:t.portal.credential?.token},responseType:"json"}).then((e=>{const t=[...e.data?.admin??[],...e.data?.member??[],...e.data?.other??[]];return Promise.resolve(t)}),(()=>Promise.reject(new Error("Failed to fetch item groups"))))}async function p(e,t,{relationshipType:r,direction:n}){const s=`${(0,a.g)(t)}content/items/${e}/relatedItems`,o=await(0,i.f)();return await o(s,{query:{f:"json",relationshipType:r,direction:n},responseType:"json"})}function w(e,t){return e?.some((e=>t?.some((t=>e.id===t.id&&e.capabilities.includes("updateitemcontrol")))))}async function y(e){const t="feature"===e.type||"oriented-imagery"===e.type,r=e?.portalItem,i=e.sourceJSON;if(!t||!r)return await Promise.resolve(!1);const a=r.portal;if(!a?.user)return await Promise.resolve(!1);if(l(r))return await Promise.resolve(!1);if(!u(r))return await Promise.resolve(!1);if(c(r))return await Promise.resolve(!1);if(m(i))return await Promise.resolve(!1);const n=s(r,a.user),o=w(await f(e)??[],await d(e)??[]);if(!n&&!o)return await Promise.resolve(!1);const y=await p(r.id,a,{relationshipType:"Service2Service"});if(y?.data?.relatedItems){if(y.data.relatedItems.some((e=>["WMTS","Map Service","Vector Tile Service"].includes(e.type))))return await Promise.resolve(!1)}return await Promise.resolve(!0)}async function g(e,t,r){if(!r)return await Promise.resolve(!1);const o="feature"===t.type||"oriented-imagery"===t.type,y=t.portalItem,g=t.sourceJSON;if(!o||!y)return await Promise.resolve(!1);if(!y.portal.user)return await Promise.resolve(!1);if(!u(y))return await Promise.resolve(!1);if(l(y))return await Promise.resolve(!1);if(c(y))return await Promise.resolve(!1);if(m(g))return await Promise.resolve(!1);const P=y.portal.isPortal&&function(e){return e.typeKeywords?.includes("Spatiotemporal")}(y);if(P)return await Promise.resolve(!1);if(["oid","global-id","geometry"].includes(r.type))return await Promise.resolve(!1);const h=t.sourceJSON.geometryProperties,b=h?.shapeLengthFieldName,I=h?.shapeAreaFieldName;if([b,I].includes(r.name))return await Promise.resolve(!1);const x=t.editFieldsInfo;if(x&&(x.creationDateField===r.name||x.creatorField===r.name||x.editDateField===r.name||x.editorField===r.name))return await Promise.resolve(!1);if(t.objectIdField===r.name||t.displayField===r.name)return await Promise.resolve(!1);if(t.typeIdField===r.name)return await Promise.resolve(!1);if(t.subtypeField===r.name)return await Promise.resolve(!1);if(t.timeInfo&&(t.timeInfo.startField===r.name||t.timeInfo.endField===r.name||t.timeInfo.trackIdField===r.name))return await Promise.resolve(!1);if(t.featureReduction){const e=await(0,i.n)(),a=new Set;if(await e.collectFeatureReductionFields(a,t,t.featureReduction),a.has(r.name))return await Promise.resolve(!1)}const F=await(0,i.n)(),S=await F.getRendererFields(t.renderer,t.fieldsIndex);if(S?.includes(r.name))return await Promise.resolve(!1);const N=t.labelingInfo?.map((e=>e.labelExpressionInfo?.expression));if(N){const e=await F.getExpressionFields(t,N);if(e?.includes(r.name))return await Promise.resolve(!1);const a=await async function(e,t){const r=await(0,i.o)(),a=e.labelingInfo?.filter((e=>(0,n.i)(e.where)));if(!a?.length)return await Promise.resolve(!1);const s=[...await Promise.all(a.map((async t=>t.where?await r.parseWhereClause(t.where,e.fieldsIndex):void await Promise.resolve())))];let o=!1;for(let e=0;e<s.length;e++){const r=s[e].fieldNames;if(!o&&r?.includes(t.name)){o=!0;break}}return await Promise.resolve(o)}(t,r);if(a)return await Promise.resolve(!1)}if(t.definitionExpression){const e=await(0,i.o)(),a=await e.parseWhereClause(t.definitionExpression,t.fieldsIndex);if(a.fieldNames?.includes(r.name))return await Promise.resolve(!1)}const k=await async function(e,t){const r=e.portalItem;if(!r)return await Promise.resolve(!1);const n=`${(0,a.g)(r.portal)}content/items/${r.id}/data`,s=await(0,i.f)();return await s(n,{query:{f:"json"},responseType:"json",token:r.portal.credential?.token}).then((async r=>{const a=r.data;if(!a)return await Promise.resolve(!1);if(a?.layers){const[r,n]=await Promise.all([(0,i.n)(),(0,i.p)()]),s=a.layers.find((t=>t.id===e.layerId)),o=s?.layerDefinition?.drawingInfo?.renderer,l=s?.layerDefinition?.featureReduction;if(!o&&!l)return await Promise.resolve(!1);if(o){const a=n.fromJSON(o),l=await r.getRendererFields(a,e.fieldsIndex);if(l?.includes(t.name))return await Promise.resolve(!0);const u=s?.layerDefinition?.definitionExpression;if(u){const r=await(0,i.o)(),a=await r.parseWhereClause(u,e.fieldsIndex);if(a.fieldNames?.includes(t.name))return await Promise.resolve(!0)}}if(l){if(await v(e,t,l))return await Promise.resolve(!0)}}return await Promise.resolve(!1)}),(()=>Promise.resolve(!1)))}(t,r);if(k)return await Promise.resolve(!1);const T=await async function(e,t){const r=e.sourceJSON,a=r?.drawingInfo?.renderer,n=r?.featureReduction;if(!a&&!n)return await Promise.resolve(!1);const[s,o]=await Promise.all([(0,i.n)(),(0,i.p)()]);if(a){const r=o.fromJSON(a),i=await s.getRendererFields(r,e.fieldsIndex);if(i?.includes(t.name))return await Promise.resolve(!0)}if(n){if(await v(e,t,n))return await Promise.resolve(!0)}return await Promise.resolve(!1)}(t,r);if(T)return await Promise.resolve(!1);const j=function(e,t,r){const i=e.map?.applicationProperties?.viewing?.search;if(i){const e=i.layers?.find((e=>e.id===t.id));if(e){const t=e?.field?.name;if(t)return t===r.name}}return!1}(e,t,r);if(j)return await Promise.resolve(!1);const O=t.relationships,E=O?.map((e=>e.keyField));if(E?.includes(r.name))return await Promise.resolve(!1);const $=s(y,y.portal.user),C=w(await f(t)??[],await d(t)??[]);if(!$&&!C)return await Promise.resolve(!1);const _=await p(y.id,y.portal,{relationshipType:"Service2Service"});if(_?.data?.relatedItems){if(_.data.relatedItems.some((e=>["WMTS","Map Service","Vector Tile Service"].includes(e.type))))return await Promise.resolve(!1)}return await Promise.resolve(!0)}async function v(e,t,r){const[a,n,s]=await Promise.all([(0,i.q)(),(0,i.r)(),(0,i.n)()]),o="binning"===r.type?a.fromJSON(r):n.fromJSON(r),l=new Set;return await s.collectFeatureReductionFields(l,e,o),l.has(t.name)?await Promise.resolve(!0):await Promise.resolve(!1)}},90028:(e,t,r)=>{r.d(t,{a:()=>a,g:()=>n});var i=r(44021);function a(e){const{customBaseUrl:t,portalHostname:r,urlKey:i}=e,{protocol:a}=window.location;return`${a}//${i?`${i}.${t}`:r}`}function n(e){return(0,i.a)(e.restUrl)}},44021:(e,t,r)=>{r.d(t,{a:()=>i});const i=e=>e&&!e.endsWith("/")?`${e}/`:e}}]);