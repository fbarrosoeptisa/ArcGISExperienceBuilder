"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-8a5f0a"],{93210:(e,t,n)=>{n.d(t,{D:()=>o,S:()=>a,a:()=>c,b:()=>r,c:()=>h,f:()=>g,g:()=>l});const a={Arabic:"ar",Bosnian:"bs",Bulgarian:"bg",Catalan:"ca",Czech:"cs",Danish:"da",German:"de",Greek:"el",English:"en",EnglishUSA:"en-US",Spanish:"es",Estonian:"et",Finnish:"fi",French:"fr",Hebrew:"he",Hindi:"hi",Croatian:"hr",Hungarian:"hu",Indonesian:"id",Italian:"it",Japanese:"ja",Korean:"ko",Lithuanian:"lt",Latvian:"lv",NorwegianBokml:"nb",Dutch:"nl",Polish:"pl",PortugueseBrazil:"pt-BR",PortuguesePortugal:"pt-PT",Romanian:"ro",Russian:"ru",Serbian:"sr",Slovenian:"sl",Slovak:"sk",Swedish:"sv",Thai:"th",Turkish:"tr",Ukrainian:"uk",Vietnamese:"vi",ChineseChina:"zh-CN",ChineseHongKong:"zh-HK",ChineseTaiwan:"zh-TW"},i=["ar","de","es","fr","it","ja","ko","ru","pl","pt-br","zh-cn"],s={"ar-BH":"ar","en-AU":"en","en-CA":"en","en-GB":"en","en-US":"en","es-ES":"es","es-MX":"es","de-CH":"de","de-AT":"de","de-DE":"de","fr-CA":"fr","fr-CH":"fr","fr-FR":"fr","it-CH":"it","it-IT":"it",ind:"id",ukr:"uk"},d=[a.Arabic,a.Hebrew],o=a.English;function r(e){return!0===e?"rtl":"ltr"}function l(e=document.documentElement){const t=(n="[lang]",function e(t){let a;return a=void 0===t||t===document||t===window?null:t.closest(n)||e(t.getRootNode().host),a}(e));var n;const i=t?.lang??window.navigator.language,r=Object.values(a),l=o,h=function(e,t){const n=o;let a=e?.toLowerCase();if(void 0!==a&&-1!==a.indexOf("-")){const[e,t]=a.split("-");a=`${e}-${t.toUpperCase()}`}return a?!0===Object.keys(s).includes(a)?t[a]:a:n}(i,s);return{locale:r.includes(h)?h:l,rtl:d.includes(i)}}async function h(e,t){const n=e.tagName.toLowerCase(),{locale:a,rtl:i}=l(e),s=await async function(e){const{path:t,locale:n,baseURL:a}=e;let i={};try{const e=await fetch(`${a}t9n/${t}.t9n.${n}.json`);i=await e.json()}catch(e){const n=await fetch(`${a}t9n/${t}.t9n.${o}.json`);i=await n.json()}return i}({path:n,locale:a,baseURL:t});return{strings:s,dir:r(i),locale:a}}function c(e,t){if(!1===/^(?:[a-z]+:)?\/\//i.test(e)){const n=window.location.href,a=new URL(n).origin,i=new URL(t).origin;a!==i&&(e=`${i}${e}`)}return e}function g(e,t="en"){let n=t;!0===Object.keys(s).includes(t)&&(n=s[t]);const a=n.toLocaleLowerCase();return!0===i.includes(a)&&(e=e.replace(/^https?:\/\/[^/]+\/en/,(e=>e.replace("en",a)))),e}},90697:(e,t,n)=>{n.r(t),n.d(t,{rfx_cte_band_combination_editor:()=>h});var a=n(6225),i=(n(5294),n(13661),n(18423),n(21255),n(35431),n(93210)),s=n(22493),d=(n(588),n(55448),n(2924),n(11840),n(52373),n(33752),n(440),n(66744),n(44345),n(42776));n(23795),n(17902),n(56451),n(71802),n(32513),n(36596);const o="methodHelpClickHandler",r="bandHelpClickHandler",l="combinationHelpClickHandler",h=class{constructor(e){(0,a.r)(this,e),this.helpActionClickEventHandlers=new Map,this.onMethodChange=e=>{const t=e.target;this.method=Number.parseInt(t.value,10),this.widgetArgs.inputArgs?.Method&&(this.widgetArgs.inputArgs.Method.value=this.method)},this.onBandChange=e=>{const t=e.target.value,n=this.bandCombinationElement.value?.trim(),a=(0,s.p)(n)?[]:n.indexOf(",")>0?n.split(","):n.split(" ");a.push(t),this._updateBandValues(this._getBandComboFormatedValue(a))},this.onBandCombinationChange=()=>{const e=this._getBandCombinationValue();this._updateBandValues(e)},this.bandProperties=void 0,this.method=void 0,this.widgetArgs=void 0}connectedCallback(){this.widgetArgs?.rasterArgs&&(this.rasterArg=this.widgetArgs.rasterArgs.Raster,this.rasterArg?.input?.addEventListener("rfxArgumentChange",(()=>{this.updateRasterArg()})))}async componentWillLoad(){({strings:this.strings,dir:this.direction}=await(0,i.c)(this.hostElement,(0,a.a)("."))),this.updateRasterArg(),this.setMethodValue()}componentDidLoad(){this.attachHelpClickEventHandlers()}setMethodValue(){this.method=this.widgetArgs.inputArgs?.Method?.value??this.widgetArgs.rasterFunctionEnums[0].key}attachHelpClickEventHandlers(){const e=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs?.inputArgs?.Method?.displayName,referenceElement:this.bandCombinationMethodContainer,helpTextID:this.widgetArgs.helpTextIDs?.extractbands_method}),t=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs?.inputArgs?.BandNames?.displayName,referenceElement:this.bandCombinationBandContainer,helpTextID:this.widgetArgs.helpTextIDs?.extractbands_band}),n=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs?.inputArgs?.BandWavelengths?.displayName,referenceElement:this.bandCombinationCombinationContainer,helpTextID:this.widgetArgs.helpTextIDs?.extractbands_combination});this.helpActionClickEventHandlers.set(o,e),this.helpActionClickEventHandlers.set(r,t),this.helpActionClickEventHandlers.set(l,n)}getMethodOptions(){return this.widgetArgs.rasterFunctionEnums.bandComboMethods.map((e=>({key:e.key.toString(),label:e.label})))}getBandOptions(e){if(!this.bandProperties)return[];return this.bandProperties[e].map((e=>({key:e.label.toString(),label:e.label})))}_getBandCombinationValue(){const e=this.bandCombinationElement.value?.trim();if((0,s.p)(e))return[];const t=e.indexOf(",")>0?e.split(","):e.split(" ");return this._getBandComboFormatedValue(t)}_getBandComboFormatedValue(e){return e.map((e=>{let t;return t=1===this.method?parseFloat(e):2===this.method?parseInt(e,10)-1:e.trim(),t}))}_updateBandValues(e){const t=this.widgetArgs.inputArgs;t&&(0===this.method&&t.BandNames?t.BandNames.value=e:1===this.method&&t.BandWavelengths?t.BandWavelengths.value=e:2===this.method&&t.BandIds&&(t.BandIds.value=e)),this.widgetArgs={...this.widgetArgs,inputArgs:t}}async updateRasterArg(){const e=this.rasterArg&&this.rasterArg.input;this.layer=await(e?.getSelectedLayer?.()),await this.updateBands()}async updateBands(){this.layer&&(this.layer.loaded?await this.updateBandsOnLayerLoad():this.layer.when((async()=>{await this.updateBandsOnLayerLoad(),this._setupValues()})))}_setupValues(){const e=this.widgetArgs.inputArgs;e&&e.Method&&void 0!==e.Method.value?this.method=e.Method.value:!e.BandIds||e.BandNames||e.BandWavelengths?!e.BandNames||e.BandIds||e.BandWavelengths?!e.bandWavelengths||e.BandIds||e.BandNames||(this.method=1):this.method=0:this.method=2}async updateBandsOnLayerLoad(){let e=[],t=[];const n=await(this.layer?.generateRasterInfo(this.layer.rasterFunction)),a=n?.keyProperties;if(a?.BandProperties?.forEach(((n,a)=>{e.push({label:String(a+1)}),t.push({label:n.BandName??`Band_${a+1}`})})),!a.BandProperties||a.BandProperties&&!a.BandProperties.length){const a=this._getDefaultBandProperties(n.bandCount);t=a.bandNames,e=a.bandIds}this.bandProperties={bandIds:e,bandNames:t,bandWavelengths:[{label:"200"},{label:"400"},{label:"600"}]}}_getDefaultBandProperties(e){const t=[],n=[];for(let a=1;a<=e;a++)t.push({label:String(a)}),n.push({label:`Band_${a}`});return{bandNames:n,bandIds:t}}getBandCombinationValue(){const e=this.widgetArgs.inputArgs;return 0===this.method&&e.BandNames&&e.BandNames.value&&e.BandNames.value.length?e.BandNames.value.join(" "):1===this.method&&e.BandWavelengths&&e.BandWavelengths.value&&e.BandWavelengths.value.length?e.BandWavelengths.value.join(" "):2===this.method&&e.BandIds&&e.BandIds.value&&e.BandIds.value.length?e.BandIds.value.map((function(e){return+e+1})).join(" "):void 0}render(){const e=this.getMethodOptions(),t=this.getBandCombinationValue(),n=0===this.method?"bandNames":1===this.method?"bandWavelengths":"bandIds",i=this.getBandOptions(n);return(0,a.h)("div",{key:"c82a6890a71e1b6cfc14b47d300c425e6f77761b"},(0,a.h)("calcite-label",{key:"97da76760942a375c21e55b0628badbf8ad14715",alignment:"start",scale:d.U.Scale,layout:"default",ref:e=>{this.bandCombinationMethodContainer=e}},(0,a.h)("rfx-label",{key:"b54fb4c113b346b81355eeb3ef1ae5de31fa9f4f",label:this.strings.method,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(o)()}),(0,a.h)("rfx-dtex-common-select",{key:"094f098c2a9548fbb86519a837b2099096876e57",mode:this.widgetArgs.mode,options:e,value:this.method.toString(),onRfxArgumentChange:this.onMethodChange})),(0,a.h)("calcite-label",{key:"6252f70795d1f2f2a4b4227814a28be26308497f",alignment:"start",scale:d.U.Scale,layout:"default",ref:e=>{this.bandCombinationBandContainer=e}},(0,a.h)("rfx-label",{key:"2034dfee0d9371f61c26ff37ddec745af8b58039",label:this.strings.band,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(r)()}),(0,a.h)("rfx-dtex-common-select",{key:"c873abf89beee6f97e33e0180516ff0e524de243",mode:this.widgetArgs.mode,options:i,onRfxArgumentChange:this.onBandChange,value:void 0})),(0,a.h)("calcite-label",{key:"b7f669a1819110628d07e131b6b5c6e4960f76d7",alignment:"start",scale:d.U.Scale,layout:"default",ref:e=>{this.bandCombinationCombinationContainer=e}},(0,a.h)("rfx-label",{key:"041405a4074a436c83adf3073afddc9a67ac80ef",label:this.strings.combination,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(l)()}),(0,a.h)("calcite-input-text",{key:"49bddf6c06baad935a8bca048aa8476c97c7391b",scale:d.U.Scale,dir:this.direction,status:"idle",alignment:"start","prefix-text":"","suffix-text":"",value:t,onCalciteInputTextChange:this.onBandCombinationChange,ref:e=>{this.bandCombinationElement=e}})))}static get assetsDirs(){return["t9n"]}get hostElement(){return(0,a.d)(this)}}},42776:(e,t,n)=>{n.d(t,{C:()=>i,U:()=>a,a:()=>s,u:()=>d});const a={Scale:"s",PopoverTimer:60},i={s:"s",m:"m",l:"l"},s={absolute:"absolute",fixed:"fixed"},d=e=>e===i.s?i.m:i.l}}]);